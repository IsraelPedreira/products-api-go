services:
  go_db:
    container_name: go_db
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: products
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d products"]
      interval: 30s
      timeout: 10s
      retries: 3

  api1:
    build: .
    container_name: api1
    environment:
      - DB_HOST=go_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=root
      - DB_NAME=products
    depends_on:
      go_db:
        condition: service_healthy

  api2:
    build: .
    container_name: api2
    environment:
      - DB_HOST=go_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=root
      - DB_NAME=products
    depends_on:
      go_db:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2

volumes:
  pgdata: {}